@using Smartstore.Web.Models.Cart
@using Smartstore.Core.Catalog.Products
@using Smartstore.Core.Checkout.Cart

@model ShoppingCartModel

@{
    var parentViewData = new ViewDataDictionary(ViewData);
    parentViewData["Parent"] = Model;
}

@foreach (var item in Model.Items)
{
    <div role="listitem"
         aria-labelledby="cart-item-link-@item.Id"
         class="cart-row" 
         attr-class='(!item.Active, "cart-item-inactive")' 
         data-key="@item.Id" 
         data-parent-key="@item.Id">
        <div class="row">
            <div sm-if="Model.AllowActivatableCartItems && Model.IsEditable" class="select-cart-item col-auto">
                <input name="SelectCartItem@(item.Id)" 
                       type="checkbox" 
                       class="form-check-input select-cart-item-checkbox" 
                       attr-checked='(item.Active, "checked")' 
                       aria-labelledby="cart-item-link-@item.Id" />
            </div>
            @* Image *@
            <div sm-if="Model.ShowProductImages && item.Image != null && item.Image.HasImage()" class="cart-item-img col-3">
                <img sm-model="item.Image" class="img-fluid" attr-alt='(item.Image.Alt.IsEmpty(), item.ProductName)' />
            </div>

            @* Data *@
            <div class="cart-item-data col">
                <partial name="CartItem.Details" model="item" view-data="parentViewData" />

                @* User Agreement & ESD *@
                <div sm-if="!Model.IsEditable && ((item.IsDownload && item.HasUserAgreement) || (Model.DisplayEsdRevocationWaiverBox && item.IsEsd))"
                        class="alert alert-warning cart-item-group">
                    <div sm-if="item.IsDownload && item.HasUserAgreement" class="download-agreement form-check">
                        <input type="checkbox" id="AgreeUserAgreement@(item.ProductId)" name="AgreeUserAgreement@(item.ProductId)" class="form-check-input" />
                        <label class="form-check-label" for="AgreeUserAgreement@(item.ProductId)">
                            <span>@Html.Raw(T("DownloadableProducts.UserAgreementConfirmation", item.ProductId))</span>
                        </label>
                    </div>
                    <div sm-if="Model.DisplayEsdRevocationWaiverBox && item.IsEsd" class="esd-revocation-waiver form-check">
                        <input type="checkbox" id="AgreeEsdRevocationWaiver@(item.ProductId)" name="AgreeEsdRevocationWaiver@(item.ProductId)" class="form-check-input" />
                        <label class="form-check-label" for="AgreeEsdRevocationWaiver@(item.ProductId)">
                            <span>@T("Checkout.EsdRevocationWaiverConfirmation")</span>
                        </label>
                    </div>
                </div>

                @* Warnings *@
                <div sm-if="item.Warnings.Count > 0" class="alert alert-danger cart-item-group" role="alert">
                    @foreach (var warning in item.Warnings)
                    {
                        <p>@Html.Raw(warning)</p>
                    }
                </div>

                @* Custom zone *@
                <zone name="cartitem_data_after" model="item.Id"></zone>

                @* Actions *@
                <div sm-if="Model.IsEditable" class="cart-item-actions hstack flex-wrap pt-2">
                    <button class="btn btn-secondary btn-to-danger btn-sm btn-icon ajax-action-link"
                            type="button"
                            title="@T("Common.Remove")"
                            data-href='@Url.Action("DeleteCartItem", "ShoppingCart", new { cartItemId = item.Id })'
                            data-name="@item.ProductName"
                            data-type="cart"
                            data-id="@item.Id"
                            data-action="remove"
                            aria-label="@T("Common.Remove")">
                        <i class="far fa-trash-can" aria-hidden="true"></i>
                    </button>

                    <div class="cart-item-qty">
                        @Html.EditorFor(x => item, "QtyInput", new
                        {
                            size = ControlSize.Small,
                            htmlAttributes = new
                            {
                                data_href = Url.Action("UpdateCartItem", "ShoppingCart", new { cartItemId = item.Id, isCartPage = true }),
                                data_sci_item = item.Id,
                                id = $"itemquantity{item.Id}",
                                name = $"itemquantity{item.Id}"
                            }
                        })

                        <span class="field-validation-valid" 
                              data-valmsg-for="itemquantity@(item.Id)" 
                              data-valmsg-replace="true"
                              role="alert"></span>

                        <script>
                        $(function () {
                            // Disable incorrect jquery validation of the step attribute for quantity inputs.
                            setTimeout(function () {
                                $('#itemquantity@(item.Id)').rules('add', { step: 1 });
                            }, 10);
                        });
                        </script>
                    </div>

                    <button sm-if="Model.DisplayMoveToWishlistButton && !item.DisableWishlistButton" 
                            type="button"
                            class="btn btn-secondary btn-sm ajax-action-link"
                            title="@T("ShoppingCart.MoveToWishlist")"
                            data-href='@Url.Action("MoveItemBetweenCartAndWishlist", "ShoppingCart", new { cartItemId = item.Id, cartType = ShoppingCartType.ShoppingCart, isCartPage = true })'
                            data-name="@item.ProductName"
                            data-type="wishlist"
                            data-action="addfromcart">
                        <i class="fal fa-heart" aria-hidden="true"></i>
                        <span class="d-none d-md-inline fwn">@T("ShoppingCart.MoveToWishlist")</span>
                    </button>
                </div>
            </div>
        </div>
    </div>

    @if (item.ProductType == ProductType.BundledProduct)
    {
        <partial name="CartItem.BundleItems" model="item.ChildItems" view-data="parentViewData" />
    }
}