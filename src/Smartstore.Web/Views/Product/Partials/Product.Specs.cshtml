@using Smartstore.Web.Models.Catalog
@using Smartstore.Core.Catalog

@model IList<ProductSpecificationModel>

@inject CatalogSettings CatalogSettings

@{
    if (Model.Count == 0)
    {
        return;
    }

    var grouped = Model.GroupBy(x => x.SpecificationAttributeName);
}

<div class="pd-specs table-responsive">
    <table class="table pd-specs-table">
        <caption class="sr-only">@T("Products.Specs")</caption>
        <tbody>
            @foreach (var grp in grouped)
            {
                var count = grp.Count();
                <tr attr-class='(grp.FirstOrDefault()?.Essential ?? false, "pd-spec-essential")'>
                    <th scope="row" class="pd-spec-name" sm-language-attributes-for="grp.Key">@grp.Key</th>
                    <td class="pd-spec-value">
                        @if (count == 1)
                        {
                            var option = grp.First().SpecificationAttributeOption;
                            <span sm-language-attributes-for="option">@option</span>
                        }
                        else if (count > 1)
                        {
                            <ul class="mb-0 pl-3">
                                @foreach (var item in grp
                                    .OrderBy(x => x.DisplayOrder)
                                    .ThenNaturalBy(CatalogSettings.SortAttributesNaturally ? x => x.SpecificationAttributeOption : null))
                                {
                                    <li class="pb-1"><span sm-language-attributes-for="item.SpecificationAttributeOption">@item.SpecificationAttributeOption</span></li>
                                }
                            </ul>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>