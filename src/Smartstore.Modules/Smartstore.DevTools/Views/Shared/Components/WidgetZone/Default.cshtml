@using Smartstore.Core.Widgets

@{
    // INFO: (mw) (dt) Please analyze all review commits carefully! Try to adopt best-practices, code style and conventions the next time.
    // TODO: (mw) (dt) Offcanvas: Don't reinvent the wheel. Use our custom Offcanvas menu. TBD with MH.
    // TODO: (mw) (dt) Offcanvas: The closer should not be a visual button, what the fuck?! See below.
    // TODO: (mw) (dt) Offcanvas: The toggler buttons are a MESS!! See below.
    // TODO: (mw) (dt) Offcanvas: Use smaller font-size for clickable items.
    // TODO: (mw) (dt) Offcanvas: Use bg color for hover & active for clickable items.
    // TODO: (mw) (dt) Offcanvas: Visualy justify clickable items and titles/groups on the left. No indent please.
    // TODO: (mw) (dt) CTRL+ALT+B. What about MAC?
    // TODO: (mw) (dt) Don't place the hamburger button on top left. It overlays MiniProfiler. Place it on top right, but further down.
    // TODO: (mw) (dt) Shitty highlight animation. Use CSS animations AFTER scroll end. "Blink" a few times, don't resize. Be creative!
    
    if (ViewData["widgetzone"] is not IWidgetZone zone)
    {
        return;
    }

    // Check if the visibility cookie is set.
    var visibilityCookie = Request.Cookies[".Smart.WZVisibility"];
    var isVisible = visibilityCookie != "hidden";

    if (zone.Name == "start")
    {
        // Add the offcanvas zone preview menu
        <div id="wz-menu" class="d-none">
            @* TODO: (mw) (dt) Localization!!!!!!!!!!!!!!!!!! *@
            <button class="wz-toggle btn btn-dark btn-outline-light" data-persistent="true"><i class="far fa-eye"></i><span>Persistent toggle</span></button>
            <div class="wz-zone-list d-flex flex-column flex-grow-1 overflow-auto mr-n2 custom-scrollbar custom-scrollbar-invert"></div>
            <button class="wz-toggle btn btn-dark btn-outline-light">Toggle<span class="small text-muted">Ctrl + Alt + B</span></button>

            @* TODO: (mw) (dt) Put a sticky buttonbar to the bottom with 3 justified items (equal width and height, similar to the product list item action bar): Persistent toggle, Temp toggle, Close offcanvas. Remove the 3 shitty buttons. *@
            @* TODO: (mw) (dt) The eye symbol of any toggler must reflect the current toggle state (eye vs eye-slash) *@
        </div>
    }
}

@if (zone.PreviewTagName == "meta")
{
    <meta name="widget-zone-name" class="wz-preview@(isVisible ? "" : " d-none")" content="@zone.Name" />
}
else
{
    <span sm-tagname="@zone.PreviewTagName" class="wz-preview badge badge-primary badge-subtle badge-ring text-truncate@(isVisible ? "" : " d-none")" title="@zone.Name"
          attr-class='(zone.PreviewCssClass.HasValue(), zone.PreviewCssClass)'
          attr-style='(zone.PreviewCssStyle.HasValue(), zone.PreviewCssStyle)'>
        <span class="text-truncate">@zone.Name</span>
        @* Maybe later *@
        @*<a href="javascript:;" class="btn-clipboard pretty-link mr-1" data-copy="@zoneName">
            <span><i class="far fa-paste"></i></span>
        </a>*@
    </span>
}

<script sm-if='zone.Name == "end"' type="module">
    import { DevTools } from "@(Url.Content("~/Modules/Smartstore.DevTools/js/smartstore.devtools.js"))";

    // Add widget zone group containers.
    let groups = @Html.Raw(Json.Serialize(ViewBag.WidgetZoneGroups));

    // Add a meta and default group for user-defined zones.
    groups.unshift({
        name: 'Meta',
        zones: [],
    });
    groups.push({
        name: @T("Admin.WidgetZones.UserDefined").JsValue,
        zones: []
    });

    // Make sure the end tag is rendered.
    $(function () {
        const zoneList = document.querySelector('.wz-zone-list');

        // Add div's to '#wz-menu .wz-zone-list' for each element in groups.
        groups.forEach(group => {
            // TODO: (mw) (dt) Use jQuery. It is MUCH shorter in this scenario.
            let groupContainer = document.createElement('div');
            groupContainer.classList.add('wz-zone-group', 'd-flex', 'flex-column', 'mb-2', 'd-none');
            groupContainer.setAttribute('data-group', group.name);
            // TODO: (mw) (dt) WTF!? Add as array to jQuery's data("groups"), so that it does not pullute the DOM.
            groupContainer.setAttribute('data-groups', group.zones.join(' '));
            groupContainer.innerHTML = `<h6 class="text-muted">${group.name}</h6>`;
            zoneList.appendChild(groupContainer);
        });

        const devTools = new DevTools();
        devTools.initialize();

        const zones = $('.wz-preview');
        zones.each(function() {
            const el = $(this);
            if (el.is('meta')) {
                devTools.registerWidgetZone({
                    name: el.attr('content'),
                    previewTagName: 'meta'
                });
            }
            else {
                devTools.registerWidgetZone({
                    name: el.attr('title'),
                    previewTagName: el[0].tagName.toLowerCase()
                });
            }
        });
    });
</script>